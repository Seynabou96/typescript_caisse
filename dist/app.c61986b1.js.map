{"version":3,"sources":["src/classes/caisse.ts","src/classes/listeTransactionView.ts","src/classes/soldeView.ts","src/classes/transaction.ts","app.ts"],"names":[],"mappings":";;;;;;AIAA,IAAA,QAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;AJKA,ACFA,ACAA,ACHA,IHKA,ACFA,ACAA,ACHA,MHKA,GEFA,ECHA,SFGA;AGFA,AJIA,ACFA,ACAA,ACHA,ICCA,sBAAA,GAAA,OAAA,CAAA,oCAAA,CAAA;AJIA,ACFA,ACAA,ACHA,YHKA,ACFA,ACAA,ACHA;ACEA,AJOI,ACHA,ACAA,ACAA,ICJJ,OJOI,ACHA,ACAA,ACAA,ICJJ,EJOI,CIPJ,AJOgB,EEHZ,ECAA,CHGA,AEHA,ACAY,ECJhB,AJO8B,CIP9B,ADII,EAAuB,GFAvB,GAAA,CEAA,EAAwC,IAAxC,EAAuD,KAAvD,EAAqE,CCJzE,CAAA;AJKY,ACAJ,ACAA,ACAA,SHAI,ACAC,ACAA,ACAA,EFAL,CCAA,EDAU,CCAC,KCAX,CHAI,CCAc,CAAC,ACAA,ACAF,CHAgB,AEAb,EFAhB,AGAJ,UFAU,CAAuB,ACAtB,CAAuB,WAAvB,CAAX,IDAU,CAAV;AGJR,AJKY,ACCP,ACAA,ACDG,ICLR,KJKY,AGAC,QCLb,CJKY,EILZ,CJKkC,EAAtB,GGAJ,CCLR,CAAA,CDKiC,OAAzB,mBCLR,CAAA,EAGA;AJIQ,AGDA,SHCK,AGDA,KHCL,GAAa,KAAb,EGDA,GAAuB,IAAvB;AHEH,ACAD,ACAA,ACDI,EFCJ,ACAA,OCDS,EDCT,CAAA,SAAA,CDAA,ACAA,CDAA,EEDI,GDCJ,ACD4B,GDC5B,CDAA,CAAA,AEDI,MFCJ,ECAO,CDAP,KCAA,EAAqB,GDAd,MAAP,EAAqB;AGJzB,AHII,ACCI,ACDH,ICJD,IHIA,ACCQ,EELF,GAAG,AHIT,ACCa,GDDb,ACCgB,CELH,GHIb,ECCsB,CAAC,EELV,CAAA,KFKG,CELP,CAAW,AFKhB,KELK,CAAb,EAEA;AJGI,AECI,EFDJ,MAAA,CAAA,AECS,GAAL,CAAS,KFDb,CAAA,GECI,GAAmB,KAAK,CAAC,KFD7B,GAAA,AECuB,EAAnB,QFDc,GAAlB,EAAgC;AIFpC,AJGQ,ACDA,ACEH,ACFD,EAAA,CDDA,CEDA,IHEQ,CGFH,AJGI,GIHD,CDER,CAAA,CFAe,CGFH,EJGR,ACDc,CDCC,IAAf,AGDJ,CHCwB,ACDA,AEAxB,CFAyB,EGFb,AJGR,CIHQ,GDEZ,GAAA,CFAkB,EGFV,AHEJ,EGFR,ODEI;ACDJ,AJGQ,ACDA,AEAA,ICFJ,AJGI,GAAG,CAAC,CCDC,EAAL,AEAO,CFAC,EDCR,CAAW,CGDC,GHCZ,CIHY,CHEZ,EGFe,CHEG,EAAlB,CGFmB,ADEnB,sBCFmB,CAAA,oBAAJ,EAAvB,EAEA;AJEQ,ACDA,ACCR,ACDK,GAFD,CHGI,ACDA,KCCR,EFAe,ACDA,CDCC,ACDA,GDCR,CAAY,EEApB,CDDQ,CAAgB,ODChB,GCDgB,IAAA,EAAI;AGA5B,AJEK,ACDO,ACZZ,CAAA,EFSI,AETJ,GEWM,CAAC,GHCS,MAAM,GAAG,KGDzB,CAAyB,EHCQ,CAAC,EGDlC,WHCyB,CAAuB,IAAvB,CAAb;AGAZ,AHCY,AEAR,EAAA,ICDE,CAAC,GHCS,GEAZ,CAAA,IFAoB,GAAG,EEAvB,CCDJ,ADCI,CCDqB,IHCU,CAAC,CEAhC,GAAA,OCDJ,EHC2B,CGC3B,AHDkD,EEA9C,EFAuB,CAAf;ADCR,ACAQ,ACdC,ACcL,EHAJ,KEdS,CFcT,AEdS,CFcT,CCAY,CEAD,KAAK,CDdP,CFcT,ACAoB,CDApB,CEdS,CDcc,QAAQ,ACdtB,CDcuB,CEA5B,OHAJ,GAAA,ECAuB,CAAuB,GAAvB,CAAf,GDAY,GAApB,EAAkC;AIEtC,AJDQ,ACAI,AEAP,GAFD,CCGA,EHDQ,EDAA,ICAM,CGCL,AJDI,ACAE,GGCH,AJDI,KAAK,CCAb,EGCY,CAAC,AHDM,IAAI,CDAf,ACAgB,CDAD,MCAJ,CGCf,AJDI,CICmB,AJDI,ACA/B,GDAQ,CAAZ,WICQ,CAAhB;AAEA,AJFQ,ACAI,MAAA,GGEH,AJFI,CIEH,IHFU,CAAC,GDAb,CAAe,KCAX,CDAJ,CIER,AJF8B,CIEH,AHFM,IDAzB,ACA6B,CAAC,CDAF,CIEpC,AJFQ,EIE2B,GHFF,OGEG,AHFgB,CGEjB,EAAQ,IHFV,GAA6B,OAA7B,GAAuC,QAA5D;AGGR,AJFI,ACAI,AEAR,ECEA,ADFA,CCEC,CAAC,AJFE,ECAI,KDAG,CAAC,CGAZ,CFAgB,AEAhB,CHAI,ACAa,CDAA,EIEjB,GADuC,CAGvC,CDJA,CFAQ,AEAR,GFA6B,EDAzB,ECA6B,CAAC,AEAlC,GAAA,IFA6B,EAArB,MEAR;AHCC,AGAG,GHJJ,QGIW,KAAK,iBAAZ;ACIJ,AHJQ,AECP,GAFD,GCKI,AHJI,IGIA,CHJI,CAAC,CGIF,CHJH,CAAQ,MGIG,AHJX,CGIY,AHJG,MAAf,OGIG,CAAuB,OAAvB,CAAX;AACA,AJJA,EAAA,IIII,EJJJ,CAAA,EIIS,GAAG,IJJZ,CAAA,GIIoB,CAAC,UJJrB,GIIY,AJJZ,CIImC,QAAvB,CAAZ,EJJA;AIKA,AJLA,ACAQ,AEER,EAAA,ICGI,AHLI,EDAR,EIKQ,EHLM,CGKH,AJLX,ACAe,AEEf,CAAA,EHFA,GCAQ,CDAR,ACAsB,CGKH,CAAC,CDHpB,CAAA,IFFQ,IEER,GCGW,ADHX,CCGkC,OAAvB,CAAX,GDHA;ACIA,AHLQ,AEEJ,MCGA,AHLI,KGKC,ADHE,CFFG,CAAC,CGKH,EDHI,GFFR,CAAc,EGKF,CAAC,KHLb,IEEJ,ICGQ,CAAuB,QAAvB,CAAZ,CAPuC,CAQvC;AJNI,ACCC,AEEJ,GAFD,EFVI,IDSK,SAAL,CAAe,OAAf,CAAuB,UAAA,GAAA,EAAG;AIO9B,AJPgC,ACG/B,GAfD,GGmBI,OJP4B,GAAG,CIOpB,AJPqB,GIOlB,GJPc,CIOV,AJPqB,KAAX,CAAA,OIOV,CAAA,WAAJ,CACd,IAAI,CAAC,KADS,EAEd,QAAQ,CAAC,KAAK,CAAC,KAAP,CAFM,EAGd,IAAI,CAAC,KAHS,EAId,KAAK,CAAC,KAJQ,CAAlB,CATuC,CAevC;AJbgD,AGIhD,EAAA,GHJI,QGIJ,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;ACUA,AJbI,ACGR,AECQ,ECSJ,EJbI,IIaE,CAAC,AHVX,EDHe,AGIA,CHJC,EGID,CHJP,CAAY,GIahB,CAAkB,ADTP,CAAG,GHJV,EGIe,GFDvB,EGUI,GDTc,EAAH,EAAkB,eAAlB,EAAkB,MAAlB,CAA4B,KAAK,OAAL,OAAmB,OAAnB,GAA6B,QAA7B,GAAwC,QAApE,EAA4E,OAA5E,EAA4E,MAA5E,CAAoF,KAAK,OAAL,EAApF,EAAkG,WAAlG,EAAkG,MAAlG,CAA8G,KAAK,QAAL,EAA9G,CAAP;ACWP,AJdI,ACtBL,AE0BK,CCRL,AHlBA,EDmBI,ACnBJ,AEwBI;;AHDA,ACvBS,AE2Bb,EHJI,KCvBS,CDuBT,ACvBS,CDuBT,AGIJ,SHJI,CAAA,CGIJ,QF3Ba,CDuBT,ECvBS,CDuBT,UAAW,OAAX,EAA+B,ACvBtB;ADwBL,AG3BR,CAAA,EAAA,MH2Ba,YAAL,CAAkB,IAAlB,CAAuB,OAAvB;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,gBAAZ;AG5BK,OAAA,CAAA,WAAA,GAAA,WAAA;AH6BL,QAAI,OAAO,CAAC,OAAR,OAAsB,OAA1B,EAAmC;AAC/B,WAAK,KAAL,IAAc,OAAO,CAAC,QAAR,EAAd;AACH,KAFD,MAGI;AACA,WAAK,KAAL,IAAc,OAAO,CAAC,QAAR,EAAd;AACH;;AACD,SAAK,cAAL;AACH,GAVD;;AAWA,EAAA,MAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACI,WAAO,KAAK,YAAZ;AACH,GAFD;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACI,WAAO,KAAK,KAAZ;AACH,GAFD;;AAKJ,SAAA,MAAA;AAzCA,CAAA,EAAA;;AAAa,OAAA,CAAA,MAAA,GAAA,MAAA","file":"app.c61986b1.js","sourceRoot":"..","sourcesContent":["import { IObserver } from \"../interfaces/observer\";\r\nimport { ISubject } from \"../interfaces/subject\";\r\nimport { Transaction } from \"./transaction\";\r\n\r\n\r\nexport class Caisse implements ISubject{\r\n    private solde : number;\r\n    private transactions : Transaction[]=[];\r\n    private observers:IObserver[]=[];\r\n    constructor(solde : number) {\r\n        this.solde = solde;\r\n    }\r\n    subscribeObserver(obs: IObserver) {\r\n        this.observers.push(obs);\r\n        obs.update(this)\r\n        console.log('subscribe');\r\n    }\r\n    unSubscribeObserver(obs: IObserver) {\r\n        let index = this.observers.indexOf(obs)\r\n        this.observers.splice(index,1)\r\n        console.log(('unsubscribe'));\r\n    }\r\n    notifyObserver() {\r\n        this.observers.forEach(obs=>obs.update(this))\r\n        console.log('notify');\r\n    }\r\n    addTransac(transac: Transaction){\r\n        this.transactions.push(transac);\r\n        console.log('addtransaction');\r\n        if (transac.getType() === 'debit') {\r\n            this.solde -= transac.getSomme();\r\n        }\r\n        else{\r\n            this.solde += transac.getSomme();\r\n        }\r\n        this.notifyObserver()\r\n    }\r\n    getTransac(){\r\n        return this.transactions;\r\n    }\r\n    \r\n    getSolde(){\r\n        return this.solde;\r\n    }\r\n    \r\n   \r\n}","import { IObserver } from \"../interfaces/observer\";\r\nimport { Caisse } from \"./caisse\";\r\n\r\nexport class listeTransactionView implements IObserver {\r\n    private ul: HTMLUListElement;\r\n  \r\n    constructor() {\r\n        this.ul = document.querySelector('.ulListeTransac')\r\n      \r\n    }\r\n\r\n    update(caisse: Caisse) {\r\n        let transac = caisse.getTransac()\r\n        this.ul.innerHTML=''\r\n        transac.forEach(trsc => {\r\n            let liHtml = document.createElement('li');\r\n            let headHtml = document.createElement('h4');\r\n            let paraHtml = document.createElement('p');\r\n            liHtml.className = trsc.getType()\r\n            headHtml.innerText = trsc.getType() === 'debit' ? 'Debit' : 'Credit';\r\n            paraHtml.innerHTML = trsc.setText()\r\n            this.ul.append(liHtml)\r\n            liHtml.append(headHtml)\r\n            liHtml.append(paraHtml)\r\n        })\r\n\r\n    }\r\n}","import { IObserver } from \"../interfaces/observer\"\r\nimport { Caisse } from \"./caisse\"\r\n\r\nexport class soldeView implements IObserver {\r\n    private div:HTMLDivElement\r\n    \r\n    constructor() {\r\n        this.div = document.querySelector('#divSolde')\r\n      \r\n    }\r\n\r\n    update(caisse: Caisse) {\r\n        let solde = caisse.getSolde()\r\n        this.div.innerHTML=solde.toString()\r\n    }\r\n}","export class Transaction {\r\n    public nomPersonne:string;\r\n    public sommeTtransaction : number;\r\n    public typeTransaction : string;\r\n    public motifTransaction : string;\r\n\r\n    constructor(nom:string,montant : number,type : string, motif : string) {\r\n        this.nomPersonne=nom;\r\n        this.sommeTtransaction = montant;\r\n        this.typeTransaction = type;\r\n        this.motifTransaction = motif;\r\n    }\r\n    getName(){\r\n        return this.nomPersonne;\r\n    }\r\n\r\n    getType(){\r\n        return this.typeTransaction;\r\n    }\r\n\r\n    getSomme(){\r\n        return this.sommeTtransaction;\r\n    }\r\n\r\n    getMotif(){\r\n        return this.motifTransaction;\r\n    }\r\n    setText(){\r\n        return `${this.getSomme()} a été ${this.getType() === 'debit' ? 'retiré' : 'déposé'} par ${this.getName()} suite a ${this.getMotif()}`;\r\n    }\r\n}\r\n\r\n","import { Caisse } from \"./src/classes/caisse\";\r\nimport { listeTransactionView } from \"./src/classes/listeTransactionView\";\r\nimport { soldeView } from \"./src/classes/soldeView\";\r\nimport { Transaction } from \"./src/classes/transaction\";\r\n\r\n\r\n//instanciation de la caisse(subject)\r\nlet caisse = new Caisse(10000);\r\n\r\n//instanciation des views(observers)\r\nlet solde = new soldeView();\r\nlet listeTransaction = new listeTransactionView();\r\n\r\n//inscription des views à la caisse\r\ncaisse.subscribeObserver(solde);\r\ncaisse.subscribeObserver(listeTransaction);\r\n\r\n//Déclaration et Ecoute de l'événement sur le bouton ADD\r\n\r\nlet buttonADD = document.querySelector('#buttonSubmit') as HTMLButtonElement;\r\n\r\nbuttonADD.addEventListener('click',(e:Event)=>{\r\n    e.preventDefault();\r\n\r\n    //déclaration des différents champs du formulaire\r\n    let name = document.querySelector('#name') as HTMLInputElement;\r\n    let somme = document.querySelector('#somme') as HTMLButtonElement;\r\n    let type = document.querySelector('#type') as HTMLSelectElement;\r\n    let motif = document.querySelector('#motif') as HTMLInputElement;\r\n    //instanciation de la transaction\r\n    let transaction = new Transaction(\r\n        name.value,\r\n        parseInt(somme.value),\r\n        type.value,\r\n        motif.value\r\n        )\r\n    //  ajout de la transaction dans la caisse\r\n    caisse.addTransac(transaction);\r\n   \r\n})\r\n\r\n"]}