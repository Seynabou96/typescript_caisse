{"version":3,"sources":["src/classes/caisse.ts","src/classes/soldeView.ts","src/classes/transaction.ts","app.ts"],"names":[],"mappings":";;;;;;AGAA,IAAA,QAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;AHKA,ACFA,ACHA,IFKA,ACFA,ACHA,MFKA,GCFA,ECHA;ACCA,AHIA,ACFA,ACHA,ICCA,WAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;AHIA,ACFA,ACHA,YFKA,ACFA,ACHA;ACEA,AHOI,ACHA,ACAA,ICJJ,OHOI,ACHA,ACAA,MCJJ,AHOI,CAAY,EGPhB,AFII,ECAA,CFGA,ACHA,ACAY,EFGc,CEH1B,CCJJ,CAAA,ADI2B,OAAvB,EAAwC,IAAxC,EAAuD,KAAvD,EAAqE,KCJzE,CAAA,EAGA;AHEY,ACAJ,ACAA,SFAI,ACAC,ACAA,GDAL,GAAW,KCAX,CFAI,ECAe,ACAF,CFAgB,ACAb,EDAhB,AEAJ,WDAW,CAAuB,WAAvB,CAAX;ADCI,ACCP,ACDG,SFAI,AEAC,SFAD,GAAsB,EAAtB,GEAJ,GAAyB,OAAzB;ACFR,AHIQ,AEDA,ICHJ,KHIS,AEDA,CCHH,GAAG,CHIL,GGJS,AHII,KAAb,CADsB,CAEtB,AEFA,CCHS,CAAA,CDGc,IAAvB,CCHK,CAAW,KAAX,CAAb,EAEA;AHIK,ACDD,ACDI,EDCJ,OCDS,EDCT,CAAA,SAAA,CAAA,GCDI,GDCJ,ACD4B,GDC5B,ECDI,QDCG,MAAP,EAAqB;AEFzB,AFGQ,ACDH,ICFD,IFGQ,CEHH,GAAG,CFGK,GEHD,AFGI,MAAM,CAAC,IEHX,CAAA,GFGI,EAAZ,IEHI,EAAZ,EAEA;AHEI,ACAI,EDAJ,MAAA,CAAA,ACAS,GAAL,CAAS,KDAb,CAAA,GCAI,GAAmB,KAAK,CAAC,KDA7B,GAAA,ACAuB,EAAnB,QDAc,GAAlB,EAAgC;AGDpC,AHEQ,ACAH,ACFD,EAAA,CDDA,GECE,CAAC,EHEM,IEFT,CAAA,IFEI,CAAe,IAAf,AEFJ,CCAJ,AHE4B,AEFxB,CCAqB,EHEjB,GGFR,CDAI,ECEJ,CDFI,YAAA;AFGI,AEFA,IFEA,GAAG,CAAC,GEFG,GFEP,CAAW,CEFC,GFEZ,QEFA;ACGR,AHAQ,ACDR,ACDK,GAFD,CCIA,AHAI,KCDR,EDCe,CAAC,CGAH,EHAL,CGAQ,AHAI,ECDpB,MECwB,CAAC,EHAj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","file":"app.c61986b1.js","sourceRoot":"..","sourcesContent":["import { IObserver } from \"../interfaces/observer\";\r\nimport { ISubject } from \"../interfaces/subject\";\r\nimport { Transaction } from \"./transaction\";\r\n\r\n\r\nexport class Caisse implements ISubject{\r\n    private solde : number;\r\n    private transactions : Transaction[]=[];\r\n    private observers:IObserver[]=[];\r\n    constructor(solde : number) {\r\n        this.solde = solde;\r\n        // this.notifyObserver()\r\n    }\r\n    subscribeObserver(obs: IObserver) {\r\n        this.observers.push(obs);\r\n        obs.update(this)\r\n        console.log('subscribe');\r\n    }\r\n    unSubscribeObserver(obs: IObserver) {\r\n        let index = this.observers.indexOf(obs)\r\n        this.observers.splice(index,1)\r\n        console.log(('unsubscribe'));\r\n    }\r\n    notifyObserver() {\r\n        this.observers.forEach(obs=>obs.update(this))\r\n        console.log('notify');\r\n    }\r\n    addTransac(transac: Transaction){\r\n        this.transactions.push(transac);\r\n        this.notifyObserver()\r\n        console.log('addtransaction');\r\n        if (transac.getType() === 'debit') {\r\n            this.solde -= transac.getSomme();\r\n        }\r\n        else{\r\n            this.solde += transac.getSomme();\r\n        }\r\n    }\r\n    getTransac(){\r\n        return this.transactions;\r\n    }\r\n    \r\n    getSolde(){\r\n        return this.solde;\r\n    }\r\n    \r\n   \r\n}","import { IObserver } from \"../interfaces/observer\"\r\nimport { Caisse } from \"./caisse\"\r\n\r\nexport class soldeView implements IObserver {\r\n    private div:HTMLDivElement\r\n    \r\n    constructor() {\r\n        this.div = document.querySelector('#divSolde')\r\n      \r\n    }\r\n\r\n    update(caisse: Caisse) {\r\n        let solde = caisse.getSolde()\r\n        this.div.innerHTML=solde.toString()\r\n    }\r\n}","export class Transaction {\r\n    public nomPersonne:string;\r\n    public sommeTtransaction : number;\r\n    public typeTransaction : string;\r\n    public motifTransaction : string;\r\n\r\n    constructor(nom:string,montant : number,type : string, motif : string) {\r\n        this.nomPersonne=nom;\r\n        this.sommeTtransaction = montant;\r\n        this.typeTransaction = type;\r\n        this.motifTransaction = motif;\r\n    }\r\n    getName(){\r\n        return this.nomPersonne;\r\n    }\r\n\r\n    getType(){\r\n        return this.typeTransaction;\r\n    }\r\n\r\n    getSomme(){\r\n        return this.sommeTtransaction;\r\n    }\r\n\r\n    getMotif(){\r\n        return this.motifTransaction;\r\n    }\r\n    setText(){\r\n        return `${this.getSomme()} a été ${this.getType() === 'debit' ? 'retiré' : 'déposé'} par ${this.getName} suite a ${this.getMotif()}`;\r\n    }\r\n}\r\n\r\n","import { Caisse } from \"./src/classes/caisse\";\r\nimport { soldeView } from \"./src/classes/soldeView\";\r\nimport { Transaction } from \"./src/classes/transaction\";\r\n\r\n\r\n//instanciation de la caisse(subject)\r\nlet caisse = new Caisse(10000);\r\n\r\n//instanciation des views(observers)\r\nlet solde = new soldeView()\r\n\r\n//inscription des views à la caisse\r\ncaisse.subscribeObserver(solde);\r\n\r\n//Déclaration et Ecoute de l'événement sur le bouton ADD\r\n\r\nlet buttonADD = document.querySelector('#buttonSubmit') as HTMLButtonElement;\r\n\r\nbuttonADD.addEventListener('click',(e:Event)=>{\r\n    e.preventDefault();\r\n\r\n    //déclaration des différents champs du formulaire\r\n    let name = document.querySelector('#name') as HTMLInputElement;\r\n    let somme = document.querySelector('#somme') as HTMLButtonElement;\r\n    let type = document.querySelector('#type') as HTMLSelectElement;\r\n    let motif = document.querySelector('#motif') as HTMLInputElement;\r\n    //instanciation de la transaction\r\n    let transaction = new Transaction(\r\n        name.value,\r\n        parseInt(somme.value),\r\n        type.value,\r\n        motif.value\r\n        )\r\n    //  ajout de la transaction dans la caisse\r\n    caisse.addTransac(transaction);\r\n})\r\n\r\n"]}